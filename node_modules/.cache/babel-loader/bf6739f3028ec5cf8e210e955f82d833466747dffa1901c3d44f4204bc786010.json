{"ast":null,"code":"var _jsxFileName = \"F:\\\\testapp\\\\src\\\\components\\\\Home\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [currentText, setCurrentText] = useState('');\n  const texts = [\"Exams are a win\", \"Exams are a thrill\", \"Exams are a breeze\"]; // Array of messages\n  const [textIndex, setTextIndex] = useState(0);\n  const [typing, setTyping] = useState(true);\n\n  // Function to handle typing effect\n  useEffect(() => {\n    let typingTimeout;\n    if (typing) {\n      // Simulate typing by gradually revealing the text\n      typingTimeout = setTimeout(() => {\n        setCurrentText(texts[textIndex].slice(0, currentText.length + 1));\n        if (currentText.length === texts[textIndex].length) {\n          setTyping(false);\n          // Pause before deleting the text\n          setTimeout(() => setTyping(false), 6000);\n        }\n      }, 100); // Adjust typing speed here (lower is faster)\n    } else {\n      // Simulate deleting text\n      typingTimeout = setTimeout(() => {\n        setCurrentText(texts[textIndex].slice(0, currentText.length - 1));\n        if (currentText.length === 0) {\n          // Move to the next text and start typing\n          setTextIndex(prevIndex => (prevIndex + 1) % texts.length);\n          setTyping(true);\n        }\n      }, 100); // Adjust deleting speed here\n    }\n    return () => clearTimeout(typingTimeout); // Clean up timeout on component unmount\n  }, [currentText, typing, textIndex, texts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typing-container\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"typing-animation\",\n      children: currentText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"ssSngsizu8Keo+w6cYGqvqGB/NA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","currentText","setCurrentText","texts","textIndex","setTextIndex","typing","setTyping","typingTimeout","setTimeout","slice","length","prevIndex","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/testapp/src/components/Home/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    const [currentText, setCurrentText] = useState('');\r\n    const texts = [\"Exams are a win\", \"Exams are a thrill\", \"Exams are a breeze\"]; // Array of messages\r\n    const [textIndex, setTextIndex] = useState(0);\r\n    const [typing, setTyping] = useState(true);\r\n\r\n    // Function to handle typing effect\r\n    useEffect(() => {\r\n        let typingTimeout;\r\n        if (typing) {\r\n            // Simulate typing by gradually revealing the text\r\n            typingTimeout = setTimeout(() => {\r\n                setCurrentText(texts[textIndex].slice(0, currentText.length + 1));\r\n                if (currentText.length === texts[textIndex].length) {\r\n                    setTyping(false);\r\n                    // Pause before deleting the text\r\n                    setTimeout(() => setTyping(false), 6000);\r\n                }\r\n            }, 100); // Adjust typing speed here (lower is faster)\r\n        } else {\r\n            // Simulate deleting text\r\n            typingTimeout = setTimeout(() => {\r\n                setCurrentText(texts[textIndex].slice(0, currentText.length - 1));\r\n                if (currentText.length === 0) {\r\n                    // Move to the next text and start typing\r\n                    setTextIndex((prevIndex) => (prevIndex + 1) % texts.length);\r\n                    setTyping(true);\r\n                }\r\n            }, 100); // Adjust deleting speed here\r\n        }\r\n\r\n        return () => clearTimeout(typingTimeout); // Clean up timeout on component unmount\r\n    }, [currentText, typing, textIndex, texts]);\r\n\r\n    return (\r\n        <div className=\"typing-container\">\r\n            <h1 className=\"typing-animation\">{currentText}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMQ,KAAK,GAAG,CAAC,iBAAiB,EAAE,oBAAoB,EAAE,oBAAoB,CAAC,CAAC,CAAC;EAC/E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACZ,IAAIY,aAAa;IACjB,IAAIF,MAAM,EAAE;MACR;MACAE,aAAa,GAAGC,UAAU,CAAC,MAAM;QAC7BP,cAAc,CAACC,KAAK,CAACC,SAAS,CAAC,CAACM,KAAK,CAAC,CAAC,EAAET,WAAW,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC;QACjE,IAAIV,WAAW,CAACU,MAAM,KAAKR,KAAK,CAACC,SAAS,CAAC,CAACO,MAAM,EAAE;UAChDJ,SAAS,CAAC,KAAK,CAAC;UAChB;UACAE,UAAU,CAAC,MAAMF,SAAS,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;QAC5C;MACJ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACb,CAAC,MAAM;MACH;MACAC,aAAa,GAAGC,UAAU,CAAC,MAAM;QAC7BP,cAAc,CAACC,KAAK,CAACC,SAAS,CAAC,CAACM,KAAK,CAAC,CAAC,EAAET,WAAW,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC;QACjE,IAAIV,WAAW,CAACU,MAAM,KAAK,CAAC,EAAE;UAC1B;UACAN,YAAY,CAAEO,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIT,KAAK,CAACQ,MAAM,CAAC;UAC3DJ,SAAS,CAAC,IAAI,CAAC;QACnB;MACJ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACb;IAEA,OAAO,MAAMM,YAAY,CAACL,aAAa,CAAC,CAAC,CAAC;EAC9C,CAAC,EAAE,CAACP,WAAW,EAAEK,MAAM,EAAEF,SAAS,EAAED,KAAK,CAAC,CAAC;EAE3C,oBACIL,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7BjB,OAAA;MAAIgB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAEd;IAAW;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEd,CAAC;AAACnB,EAAA,CAvCID,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAyCV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}